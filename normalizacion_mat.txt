Program
    matriz : [3#3];
    minVals : [1#3];
    maxVals : [1#3];
    normalizada : [3#3];
{
    matriz :== [[1,2,3], [4,5,6], [7,8,9]];

    minVals := [matriz[0,0], matriz[0,1], matriz[0,2]];
    maxVals := [matriz[0,0], matriz[0,1], matriz[0,2]];

       While (fTam(matriz,0) - 1 > 0) do {
        If (matriz[fTam(matriz,0),0] < minVals[0]) then {
            minVals[0] := matriz[fTam(matriz,0),0];
        }
        If (matriz[fTam(matriz,0),1] < minVals[1]) then {
            minVals[1] := matriz[fTam(matriz,0),1];
        }
        If (matriz[fTam(matriz,0),2] < minVals[2]) then {
            minVals[2] := matriz[fTam(matriz,0),2];
        }

        If (matriz[fTam(matriz,0),0] > maxVals[0]) then {
            maxVals[0] := matriz[fTam(matriz,0),0];
        }
        If (matriz[fTam(matriz,0),1] > maxVals[1]) then {
            maxVals[1] := matriz[fTam(matriz,0),1];
        }
        If (matriz[fTam(matriz,0),2] > maxVals[2]) then {
            maxVals[2] := matriz[fTam(matriz,0),2];
        }
    }

        While (fTam(matriz,0) - 1 > 0) do {
        normalizada[fTam(matriz,0),0] := (matriz[fTam(matriz,0),0] - minVals[0]) / (maxVals[0] - minVals[0]);
        normalizada[fTam(matriz,0),1] := (matriz[fTam(matriz,0),1] - minVals[1]) / (maxVals[1] - minVals[1]);
        normalizada[fTam(matriz,0),2] := (matriz[fTam(matriz,0),2] - minVals[2]) / (maxVals[2] - minVals[2]);
    }

      print("Matriz original: ", matriz);
    print("Matriz normalizada: ", normalizada);
}

